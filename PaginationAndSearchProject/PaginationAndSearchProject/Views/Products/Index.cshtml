@model IPagedList<PaginationAndSearchProject.Models.Product>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-6">
        <form asp-action="Index">
            <input type="text" class="form-control" name="q" value="@(ViewBag.SearchText != null ? ViewBag.SearchText : "")">
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>
</div>
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<hr />
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions { LiElementClasses = new string[] { "page-item" }, PageClasses = new string[] { "page-link" }, LinkToFirstPageFormat = "<< İlk", LinkToPreviousPageFormat = "< Geri", LinkToNextPageFormat = "İleri  >", LinkToLastPageFormat = "Son >>" })